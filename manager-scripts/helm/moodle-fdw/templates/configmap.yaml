apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "moodle-fdw.fullname" . }}-configuration
data:
  config.yaml: |
{{ .Files.Get "config-migration.yaml" | indent 4 }}
  infra-k8s.yaml: |
    ref:
      config:
        user: "moodle"
        server: "psql1"
        dbname: moodle
        host: "{{ include "moodle-fdw.fullname" . }}-db-ref"
        internal_host: "{{ include "moodle-fdw.fullname" . }}-db-ref"
        port: 5432
        password: "m@0dl3ing"
    db1:
      config:
        user: moodle 
        server: psql1 
        dbname: moodle
        host: {{ include "moodle-fdw.fullname" . }}-db
        internal_host: "{{ include "moodle-fdw.fullname" . }}-db"
        port: 5432
        password: m@0dl3ing
    db2:
      config:
        user: moodle 
        server: psql1 
        dbname: moodle
        host: {{ include "moodle-fdw.fullname" . }}-db2
        internal_host: "{{ include "moodle-fdw.fullname" . }}-db2" 
        port: 5432
        password: m@0dl3ing
  init.sh: |
    while ! pg_isready -h {{ include "moodle-fdw.fullname" . }}-db  > /dev/null 2> /dev/null; do
      echo "Connecting to  {{ include "moodle-fdw.fullname" . }}-db  Failed"
      sleep 1
    done  
    while ! pg_isready -h {{ include "moodle-fdw.fullname" . }}-db2  > /dev/null 2> /dev/null; do
      echo "Connecting to  {{ include "moodle-fdw.fullname" . }}-db2  Failed"
      sleep 1
    done  
    while ! pg_isready -h {{ include "moodle-fdw.fullname" . }}-db-ref  > /dev/null 2> /dev/null; do
      echo "Connecting to  {{ include "moodle-fdw.fullname" . }}-db-ref  Failed"
      sleep 1
    done  
    cat config.yaml
    python3 migrate.py -i
    export PGPASSWORD=m@0dl3ing
    
    psql -h {{ include "moodle-fdw.fullname" . }}-db -U moodle -p 5432 moodle -c 'ALTER SERVER psql1 OPTIONS (fetch_size '50000');'
    psql -h {{ include "moodle-fdw.fullname" . }}-db -U moodle -p 5432 moodle < /app/dump_data.sql
    psql -h {{ include "moodle-fdw.fullname" . }}-db-ref -U moodle -p 5432 moodle < /app/sequence.sql
    psql -h {{ include "moodle-fdw.fullname" . }}-db2 -U moodle -p 5432 moodle < /app/dump_data.sql
  config.php: |
    <?php  // Moodle configuration file

    unset($CFG);
    global $CFG;
    $CFG = new stdClass();

    $CFG->dbtype    = getenv('MOODLE_DOCKER_DBTYPE');
    $CFG->dblibrary = 'native';
    $CFG->dbhost    = getenv('MOODLE_DOCKER_DBHOST');
    $CFG->dbname    = getenv('MOODLE_DOCKER_DBNAME');
    $CFG->dbuser    = getenv('MOODLE_DOCKER_DBUSER');
    $CFG->dbpass    = getenv('MOODLE_DOCKER_DBPASS');
    $CFG->prefix    = 'm_';
    $CFG->dboptions = array(
      'dbcollation' => getenv('MOODLE_DOCKER_DBCOLLATION'),
      'logall' => {{ .Values.databaseLogall |default "false" }}
    );    
    $CFG->tool_generator_users_password = "moodle";
    $CFG->disableupdateautodeploy = true;
    $host = 'localhost';
    if (!empty(getenv('MOODLE_DOCKER_WEB_HOST'))) {
        $host = getenv('MOODLE_DOCKER_WEB_HOST');
        $CFG->wwwroot   = "http://{$host}";
        $port = getenv('MOODLE_DOCKER_WEB_PORT');
        if (!empty($port)) {
            $CFG->wwwroot .= ":{$port}";
        }

    } else {
        # redirect to used host+port
        $host = $_SERVER['HTTP_HOST'];
        $CFG->wwwroot   = "http://{$host}";
    }

    # disable port as we use HTTP_HOST

    $CFG->dataroot  = '/var/www/moodledata';
    $CFG->admin     = 'admin';
    $CFG->directorypermissions = 0777;
    $CFG->smtphosts = 'mailhog:1025';

    // Debug options - possible to be controlled by flag in future..
    //$CFG->debug = (E_ALL | E_STRICT); // DEBUG_DEVELOPER
    //$CFG->debugdisplay = 1;
    //$CFG->debugstringids = 1; // Add strings=1 to url to get string ids.
    //$CFG->perfdebug = 15;
    //$CFG->debugpageinfo = 1;
    $CFG->allowthemechangeonurl = 1;
    $CFG->passwordpolicy = 0;

    $CFG->phpunit_dataroot  = '/var/www/phpunitdata';
    $CFG->phpunit_prefix = 't_';
    define('TEST_EXTERNAL_FILES_HTTP_URL', 'http://exttests');

    $CFG->behat_wwwroot   = 'http://webserver';
    $CFG->behat_dataroot  = '/var/www/behatdata';
    $CFG->behat_prefix = 'b_';
    $CFG->behat_profiles = array(
        'default' => array(
            'browser' => getenv('MOODLE_DOCKER_BROWSER'),
            'wd_host' => 'http://selenium:4444/wd/hub',
        ),
    );
    $CFG->behat_faildump_path = '/var/www/behatfaildumps';

    //define('PHPUNIT_LONGTEST', true);

    if (getenv('MOODLE_DOCKER_PHPUNIT_EXTRAS')) {
        define('TEST_SEARCH_SOLR_HOSTNAME', 'solr');
        define('TEST_SEARCH_SOLR_INDEXNAME', 'test');
        define('TEST_SEARCH_SOLR_PORT', 8983);

        define('TEST_SESSION_REDIS_HOST', 'redis');
        define('TEST_CACHESTORE_REDIS_TESTSERVERS', 'redis');

        define('TEST_CACHESTORE_MONGODB_TESTSERVER', 'mongodb://mongo:27017');

        define('TEST_CACHESTORE_MEMCACHED_TESTSERVERS', "memcached0:11211\nmemcached1:11211");
        define('TEST_CACHESTORE_MEMCACHE_TESTSERVERS', "memcached0:11211\nmemcached1:11211");

        define('TEST_LDAPLIB_HOST_URL', 'ldap://ldap');
        define('TEST_LDAPLIB_BIND_DN', 'cn=admin,dc=openstack,dc=org');
        define('TEST_LDAPLIB_BIND_PW', 'password');
        define('TEST_LDAPLIB_DOMAIN', 'ou=Users,dc=openstack,dc=org');

        define('TEST_AUTH_LDAP_HOST_URL', 'ldap://ldap');
        define('TEST_AUTH_LDAP_BIND_DN', 'cn=admin,dc=openstack,dc=org');
        define('TEST_AUTH_LDAP_BIND_PW', 'password');
        define('TEST_AUTH_LDAP_DOMAIN', 'ou=Users,dc=openstack,dc=org');

        define('TEST_ENROL_LDAP_HOST_URL', 'ldap://ldap');
        define('TEST_ENROL_LDAP_BIND_DN', 'cn=admin,dc=openstack,dc=org');
        define('TEST_ENROL_LDAP_BIND_PW', 'password');
        define('TEST_ENROL_LDAP_DOMAIN', 'ou=Users,dc=openstack,dc=org');
    }

    require_once(__DIR__ . '/lib/setup.php');
