apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: moodle-fdw-dump-
spec:
  entrypoint: moodle-dump
  parallelism: 3
  #onExit: helm-remove-moodle
  volumes:   
  - name: git
    persistentVolumeClaim:
      claimName: git    
  - name: workdir
    emptyDir: {}
  
  arguments:
    parameters:
    - name: xp-name
      value: moodle
    - name: tests
#    artifacts:
#    - name: moodle-chart
#      git:
#        repo: https://github.com/CloudLargeScale-UCLouvain/LiveMigrations

  templates:
  - name: moodle-dump
    steps:
    - - name: save-manager-scripts
        template: volume-manager-scripts
    - - name: install-moodle
        template: helm-install-moodle
        arguments:
          parameters:
          - name: size
            value: "{{item.size}}"        
          - name: nb-users
            value: "{{item.nb-users}}"        
          - name: nb-courses
            value: "{{item.nb-courses}}"        
          artifacts:
          - name: manager-scripts
            from: "{{steps.save-manager-scripts.outputs.artifacts.manager-scripts}}"  
        withParam: "{{workflow.parameters.tests}}"
    - - name: init-data
        template: make-test-site
        arguments:
          artifacts:
          - name: iomad-www
            from: "{{steps.save-manager-scripts.outputs.artifacts.iomad-www}}"
          parameters:
          - name: size
            value: "{{item.size}}"        
          - name: nb-users
            value: "{{item.nb-users}}"        
          - name: nb-courses
            value: "{{item.nb-courses}}"  
        withParam: "{{workflow.parameters.tests}}"            
    - - name: dump-db
        template: dump-database
        arguments:
          parameters:
          - name: size
            value: "{{item.size}}"        
          - name: nb-users
            value: "{{item.nb-users}}"        
          - name: nb-courses
            value: "{{item.nb-courses}}"  
        withParam: "{{workflow.parameters.tests}}"            
       
#    - - name: remove-moodle
#        template: helm-remove-moodle
##############################################################################
  - name: volume-manager-scripts
    script:
      image: alpine/git
      volumeMounts:
      - mountPath: /git
        name: git 
      command: [sh]        
      source: |-
        git clone --depth 1 https://github.com/guillaumerosinosky/iomad.git /var/www/html        
    outputs:
      artifacts:
      - name: manager-scripts
        path: /git/manager-scripts
      - name: empty-dump
        path: /git/iomad/dump_db_empty.sql
      - name: iomad-www
        path: /var/www/html
#################################
  - name: helm-install-moodle
    inputs:
      artifacts:
      - name: manager-scripts
        path: /git/manager-scripts
        mode: 0755  
      parameters:
      - name: size
      - name: nb-users
      - name: nb-courses
    script:
      image: alpine/helm
      command: [sh]    
      source: |-
        cd /git/manager-scripts/helm/moodle-fdw
        export XP_NAME={{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}
        helm delete $XP_NAME
        helm install $XP_NAME .
        apk add --update curl 
        echo ""
        until `curl -i -L "http://${XP_NAME}-moodle-fdw-webserver/login/index.php" |grep "200 OK" >& /tmp/out`; 
          do echo "'http://${XP_NAME}-moodle-fdw-webserver/login/index.php'" && sleep 1;
        done
################################
  - name: source-dump-mono
    inputs:
      artifacts:
      - name: empty-dump
        path: /git/empty-dump.sql
        mode: 0755
      parameters:
      - name: host-db
      - name: size
      - name: nb-users
      - name: nb-courses
    script:
      image: postgres
      command: [sh]    
      source: |-
        export PGPASSWORD=m@0dl3ing
        export XP_NAME={{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}
        psql -U moodle -h $XP_NAME-moodle-fdw-db < /git/empty-dump.sql
####################################
  - name: source-dump-fdw
    inputs:
      parameters:
      - name: host-db
      - name: size
      - name: nb-users
      - name: nb-courses    
    container:
      # get empty database
      image: postgres 
      command: [sh, -c]
      args: ['export PGPASSWORD=m@0dl3ing 
      && export XP_NAME={{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}
      && psql -h $XP_NAME-moodle-fdw-db -U moodle postgres -c "drop database if exists moodle"
      && psql -h $XP_NAME-moodle-fdw-db -U moodle postgres -c "create database if exists moodle"
      && psql -h $XP_NAME-moodle-fdw-db2 -U moodle postgres -c "drop database if exists moodle"
      && psql -h $XP_NAME-moodle-fdw-db2 -U moodle postgres -c "create database moodle"
      && psql -h $XP_NAME-moodle-fdw-db-ref -U moodle postgres -c "drop if exists database moodle_ref"
      && psql -h $XP_NAME-moodle-fdw-db-ref -U moodle postgres -c "create database moodle_ref"
      && psql -h $XP_NAME-moodle-fdw-db -U moodle moodle < /dump/iomad/dump_db1.sql
      && psql -h $XP_NAME-moodle-fdw-db2 -U moodle moodle < /dump/iomad/dump_db2.sql
      && psql -h $XP_NAME-moodle-fdw-db-ref -U moodle moodle_ref < /dump/iomad/dump_ref.sql']
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: git
        mountPath: /dump    
####################################
  - name: make-test-site
    inputs:
      parameters:
      - name: size
      - name: nb-users
      - name: nb-courses
      artifacts:
      - name: iomad-www
        path: /var/www/html

    script:
      image: moodlehq/moodle-php-apache:7.2
      env:
      - name: MOODLE_DOCKER_DBHOST
        value: "{{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}-moodle-fdw-db"
      - name: MOODLE_DOCKER_DBNAME
        value: moodle
      - name: MOODLE_DOCKER_DBPASS
        value: m@0dl3ing
      - name: MOODLE_DOCKER_DBTYPE
        value: pgsql
      - name: MOODLE_DOCKER_DBUSER
        value: moodle
      - name: MOODLE_DOCKER_WEB_HOST
        value: localhost
      - name: MOODLE_DOCKER_BROWSER
        value: firefox
      - name: MOODLE_DOCKER_WEB_PORT
        value: "80"
      command: [bash]   
      source : |
        echo "{{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}-moodle-fdw-db"
        echo "php admin/tool/iomadsite/cli/maketestsite.php --size={{inputs.parameters.size}} --nb_users={{inputs.parameters.nb-users}} --nb_courses={{inputs.parameters.nb-courses}}"
        php admin/tool/iomadsite/cli/maketestsite.php --size={{inputs.parameters.size}} --nb_users={{inputs.parameters.nb-users}} --nb_courses={{inputs.parameters.nb-courses}}

###########################################          
  - name: dump-database
    inputs:
      parameters:
      - name: size
      - name: nb-users
      - name: nb-courses    
    script:
      image: postgres
      command: [sh]    
      source: |-
        export PGPASSWORD=m@0dl3ing
        export XP_NAME={{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}
        pg_dump --column-inserts --data-only -U moodle -h $XP_NAME-moodle-fdw-db > /dump1.sql
        pg_dump --column-inserts --data-only -U moodle -h $XP_NAME-moodle-fdw-db2 > /dump2.sql
        pg_dump --column-inserts --data-only -U moodle -h $XP_NAME-moodle-fdw-db-ref > /dump-ref.sql
    outputs:
      artifacts:
      - name: dump1
        path: /dump1.sql
        archive:
          none: {}        
        s3: 
          endpoint: argo-artifacts.default:9000  
          bucket: experiments
          insecure: true
          key: "dump/moodle-fdw/{{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}-1.sql"
          accessKeySecret:
            name: argo-artifacts
            key: accesskey
          secretKeySecret:
            name: argo-artifacts
            key: secretkey
      - name: dump2
        path: /dump2.sql
        archive:
          none: {}        
        s3: 
          endpoint: argo-artifacts.default:9000  
          bucket: experiments
          insecure: true
          key: "dump/moodle-fdw/{{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}-2.sql"
          accessKeySecret:
            name: argo-artifacts
            key: accesskey
          secretKeySecret:
            name: argo-artifacts
            key: secretkey
      - name: dump-ref
        path: /dump-ref.sql
        archive:
          none: {}        
        s3: 
          endpoint: argo-artifacts.default:9000  
          bucket: experiments
          insecure: true
          key: "dump/moodle-fdw/{{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}-ref.sql"
          accessKeySecret:
            name: argo-artifacts
            key: accesskey
          secretKeySecret:
            name: argo-artifacts
            key: secretkey
#######################################        
  - name: helm-remove-moodle
    inputs:
      parameters:
      - name: size
      - name: nb-users
      - name: nb-courses    
    script:
      image: alpine/helm
      command: [sh]    
      source: |-
        export XP_NAME={{workflow.parameters.xp-name}}-{{inputs.parameters.size}}-{{inputs.parameters.nb-users}}-{{inputs.parameters.nb-courses}}
        helm delete $XP_NAME
        